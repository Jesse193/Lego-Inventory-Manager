// <auto-generated />
using LegoInventoryManager.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LegoInventoryManager.Migrations
{
    [DbContext(typeof(LegoInventoryManagerContext))]
    [Migration("20240326214439_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LegoInventoryManager.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PartNumber")
                        .HasColumnType("integer")
                        .HasColumnName("part_number");

                    b.Property<int>("Qty")
                        .HasColumnType("integer")
                        .HasColumnName("qty");

                    b.HasKey("Id")
                        .HasName("pk_parts");

                    b.ToTable("parts", (string)null);
                });

            modelBuilder.Entity("LegoInventoryManager.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Qty")
                        .HasColumnType("integer")
                        .HasColumnName("qty");

                    b.Property<int>("SetNumber")
                        .HasColumnType("integer")
                        .HasColumnName("set_number");

                    b.HasKey("Id")
                        .HasName("pk_sets");

                    b.ToTable("sets", (string)null);
                });

            modelBuilder.Entity("PartSet", b =>
                {
                    b.Property<int>("PartsId")
                        .HasColumnType("integer")
                        .HasColumnName("parts_id");

                    b.Property<int>("SetsId")
                        .HasColumnType("integer")
                        .HasColumnName("sets_id");

                    b.HasKey("PartsId", "SetsId")
                        .HasName("pk_part_set");

                    b.HasIndex("SetsId")
                        .HasDatabaseName("ix_part_set_sets_id");

                    b.ToTable("part_set", (string)null);
                });

            modelBuilder.Entity("PartSet", b =>
                {
                    b.HasOne("LegoInventoryManager.Models.Part", null)
                        .WithMany()
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_part_set_parts_parts_id");

                    b.HasOne("LegoInventoryManager.Models.Set", null)
                        .WithMany()
                        .HasForeignKey("SetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_part_set_sets_sets_id");
                });
#pragma warning restore 612, 618
        }
    }
}
