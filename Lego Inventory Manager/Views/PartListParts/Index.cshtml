@model PartListPart

<div>
    <h3 class="display-4">List Details</h3>

    @if (Model != null)
    {
        <h3>Number Of Parts: @Html.DisplayFor(modelItem => Model.NumberParts)</h3>
        <table class="table table-bordered table-striped table-sm">
            <thead>
                <tr>
                    <th>Quantity</th>
                    <th>Part Number</th>
                    <th>Part Name</th>
                    <th>Color</th>
                    <th>Image</th>
                    <th>Edit Part</th>

                </tr>
            </thead>
            <tbody>
                <tr>
                    @foreach (var result in Model.Results)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => result.Quantity)</td>
                            <td>@Html.DisplayFor(modelItem => result.ListPart.PartNumber)</td>
                            <td>@Html.DisplayFor(modelItem => result.ListPart.Name)</td>
                            <td>@Html.DisplayFor(modelItem => result.ListPartColor.Name)</td>
                            <td><img src=@Html.DisplayFor(modelItem => result.ListPart.Image) alt="Image of Lego Part" width="200" height="200" /></td>
                            <td>
                                <form asp-controller="PartListParts" asp-action="Put">
                                    <center>
                                        <input type="text" id="userToken" name="userToken" placeholder="User Token:" />
                                        <br>
                                        <br />
                                        <input type="number" id="Quantity" name="Quantity" placeholder="Quantity" />
                                        <br>
                                        <br />
                                        <input type="hidden" id="partNumber" name="partNumber" value="@result.ListPart.PartNumber" />
                                        <input type="hidden" id="colorId" name="colorId" value="@result.ListPartColor.ColorId" />
                                        <input type="hidden" id="listId" name="listId" value="@result.ListId" />
                                        <input type="submit" value="Submit" />
                                    </center>
                                </form>
                            </td>
                        </tr>
                        <br>
                    }
                </tr>
            </tbody>
        </table>
        @if (Model.Previous != null)
        {
            @if (Model.Previous.Contains("page="))
            {
                int userTokenIndexStart = Model.Previous.IndexOf("users/") + "users/".Length;
                int userTokenIndexEnd = Model.Previous.IndexOf("/partlists");
                string userToken = Model.Previous.Substring(userTokenIndexStart, userTokenIndexEnd - userTokenIndexStart);
                int listIdIndexStart = Model.Previous.IndexOf("partlists/") + "partlists/".Length;
                int listIdIndexEnd = Model.Previous.IndexOf("/parts");
                string listId = Model.Previous.Substring(listIdIndexStart, listIdIndexEnd - listIdIndexStart);
                int pageIndex = Model.Previous.IndexOf("&page=");
                int pageNumber = pageIndex + 6;
                int page = Int32.Parse(Model.Previous.Substring(pageNumber, 1));
                <td><button name="nameButton" id="idButton" title="Previous Page" class="btn btn-secondary" onclick="location.href='@Url.Action("Index","PartListParts", new {  userToken = userToken, listId = listId, page = page })'">Previous Page</button></td>
            }
            else
            {
                int userTokenIndexStart = Model.Previous.IndexOf("users/") + "users/".Length;
                int userTokenIndexEnd = Model.Previous.IndexOf("/partlists");
                string userToken = Model.Previous.Substring(userTokenIndexStart, userTokenIndexEnd - userTokenIndexStart);
                int listIdIndexStart = Model.Previous.IndexOf("partlists/") + "partlists/".Length;
                int listIdIndexEnd = Model.Previous.IndexOf("/parts");
                string listId = Model.Previous.Substring(listIdIndexStart, listIdIndexEnd - listIdIndexStart);
                <td><button name="nameButton" id="idButton" title="Previous Page" class="btn btn-secondary" onclick="location.href='@Url.Action("Index","PartListParts", new {  userToken = userToken, listId = listId, page = 1 })'">Previous Page</button></td>
            }
        }
        @if (Model.Next != null)
        {
            int userTokenIndexStart = Model.Next.IndexOf("users/") + "users/".Length;
            int userTokenIndexEnd = Model.Next.IndexOf("/partlists");
            string userToken = Model.Next.Substring(userTokenIndexStart, userTokenIndexEnd - userTokenIndexStart);
            int listIdIndexStart = Model.Next.IndexOf("partlists/") + "partlists/".Length;
            int listIdIndexEnd = Model.Next.IndexOf("/parts");
            string listId = Model.Next.Substring(listIdIndexStart, listIdIndexEnd - listIdIndexStart);
            int pageIndex = Model.Next.IndexOf("&page=");
            int pageNumber = pageIndex + 6;
            int page = Int32.Parse(Model.Next.Substring(pageNumber, 1));
            <td><button name="nameButton" id="idButton" title="Next Page" class="btn btn-secondary" onclick="location.href='@Url.Action("Index","PartListParts", new {  userToken = userToken, listId = listId, page = page })'">Next Page</button></td>
        }
    }
</div>